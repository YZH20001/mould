<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QC.MF.Application</name>
    </assembly>
    <members>
        <member name="T:QC.MF.AppConsts">
            <summary>
            Some consts used in the application.
            </summary>
        </member>
        <member name="F:QC.MF.AppConsts.DefaultPageSize">
            <summary>
            Default page size for paged requests.
            </summary>
        </member>
        <member name="F:QC.MF.AppConsts.MaxPageSize">
            <summary>
            Maximum allowed page size for paged requests.
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CheckUpdateOutput.IsMandatoryUpdate">
            <summary>
            是否强制更新
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CheckUpdateOutput.Describe">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CreateAppEditionInput.Version">
            <summary>
            版本号
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CreateAppEditionInput.AboutUrl">
            <summary>
            关于
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CreateAppEditionInput.InstallationPackage">
            <summary>
            安装包
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CreateAppEditionInput.IsMandatoryUpdate">
            <summary>
            是否强制更新
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CreateAppEditionInput.IsActive">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CreateAppEditionInput.Describe">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:QC.MF.AppEditions.Dto.CreateIOSAppEditionInput.ItunesUrl">
            <summary>
            Itunes连接
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.IsUpatedInput.UpdateTime">
            <summary>
            本地图片的更新时间
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.GetAppStartPageInput.Platform">
            <summary>
            平台 Android = 1, IOS = 2 
            （创建默认值时，该项可空）
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.GetAppStartPageInput.Width_Px">
            <summary>
            分辨率 宽
            （创建默认值时，该项可空）
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.GetAppStartPageInput.High_Px">
            <summary>
            分辨率 高
            （创建默认值时，该项可空）
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.CreateAppStartPageDto.Platform">
            <summary>
            平台 Android = 1, IOS = 2 
            （创建默认值时，该项可空）
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.CreateAppStartPageDto.Width_Px">
            <summary>
            分辨率 宽
            （创建默认值时，该项可空）
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.CreateAppStartPageDto.High_Px">
            <summary>
            分辨率 高
            （创建默认值时，该项可空）
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.CreateAppStartPageDto.Url">
            <summary>
            图片路径
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.GetListAppStartPageDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.GetListAppStartPageDto._CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.GetListAppStartPageDto.LastModificationTime">
            <summary>
            最后一次修改时间
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.GetListAppStartPageDto._LastModificationTime">
            <summary>
            最后一次修改时间
            </summary>
        </member>
        <member name="P:QC.MF.AppStartPages.Dto.GetListAppStartPageDto.UpdateTime">
            <summary>
            更新时间
            </summary>
        </member>
        <member name="T:QC.MF.AppStartPages.IAppStartPageAppService">
            <summary>
            AppStartPage
            </summary>
        </member>
        <member name="M:QC.MF.AppStartPages.IAppStartPageAppService.DeleteBatch(QC.MF.CommonDto.ArrayDto{System.Int32})">
            <summary>
            批量删除
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.AppStartPages.IAppStartPageAppService.GetAppStartPage(QC.MF.AppStartPages.Dto.GetAppStartPageInput)">
            <summary>
            App端： 获取图片
            </summary>
        </member>
        <member name="M:QC.MF.AppStartPages.IAppStartPageAppService.IsUpdated(QC.MF.AppStartPages.Dto.IsUpatedInput)">
            <summary>
            App端： 检查图片是否有更新
            </summary>
        </member>
        <member name="T:QC.MF.Auditing.AuditLogAndUser">
            <summary>
            A helper class to store an <see cref="P:QC.MF.Auditing.AuditLogAndUser.AuditLog"/> and a <see cref="P:QC.MF.Auditing.AuditLogAndUser.User"/> object.
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Accounts.Dto.BindingThirdPartyInput">
            <summary>
            绑定账号参数
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Accounts.Dto.BindingThirdPartyInput.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Accounts.Dto.BindingThirdPartyInput.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Accounts.Dto.BindingThirdPartyInput.Token">
            <summary>
            认证令牌
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Accounts.AccountAppService">
            <summary>
            账号服务
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.Accounts.AccountAppService.#ctor(QC.MF.Authorization.Users.UserRegistrationManager,QC.MF.SMSs.ISMSManager,QC.MF.Authorization.LogInManager,QC.MF.Security.PasswordComplexityChecker,Abp.Runtime.Caching.ICacheManager,QC.MF.Authorization.Users.UserManager,QC.MF.Captcha.ICaptchaManager)">
            <summary>
            构造函数
            </summary>
            <param name="userRegistrationManager"></param>
            <param name="smsManager"></param>
            <param name="loginManager"></param>
            <param name="passwordComplexityChecker"></param>
            <param name="captchaManager"></param>
        </member>
        <member name="M:QC.MF.Authorization.Accounts.AccountAppService.IsTenantAvailable(QC.MF.Authorization.Accounts.Dto.IsTenantAvailableInput)">
            <summary>
            租户是否可用
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Accounts.AccountAppService.BindingThirdParty(QC.MF.Authorization.Accounts.Dto.BindingThirdPartyInput)">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.Accounts.AccountAppService.SendPhoneNumberCode(QC.MF.Users.Dto.PhoneWithCaptchaInput)">
            <summary>
            登录时发送手机证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.Accounts.IAccountAppService">
            <summary>
            账号服务接口
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.Accounts.IAccountAppService.IsTenantAvailable(QC.MF.Authorization.Accounts.Dto.IsTenantAvailableInput)">
            <summary>
            租户是否可用
            （无调用）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Accounts.IAccountAppService.BindingThirdParty(QC.MF.Authorization.Accounts.Dto.BindingThirdPartyInput)">
            <summary>
            绑定账号
            （无调用）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Accounts.IAccountAppService.SendPhoneNumberCode(QC.MF.Users.Dto.PhoneWithCaptchaInput)">
            <summary>
            登录时发送手机证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.Actives.ActiveAppService">
            <summary>
            账号服务
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.Actives.ActiveAppService.#ctor(QC.MF.Authorization.Users.UserRegistrationManager,QC.MF.SMSs.ISMSManager,QC.MF.Authorization.LogInManager,QC.MF.Security.PasswordComplexityChecker,Abp.Runtime.Caching.ICacheManager,QC.MF.Authorization.Users.UserManager,QC.MF.Captcha.ICaptchaManager)">
            <summary>
            构造函数
            </summary>
            <param name="userRegistrationManager"></param>
            <param name="smsManager"></param>
            <param name="loginManager"></param>
            <param name="passwordComplexityChecker"></param>
            <param name="captchaManager"></param>
        </member>
        <member name="M:QC.MF.Authorization.Actives.ActiveAppService.SendConfirmEmailCode(QC.MF.Authorization.Dto.SendConfirmEmailByCaptchaInput)">
            <summary>
            发送邮箱验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Actives.ActiveAppService.SendConfirmPhoneNumberByCode(QC.MF.Users.Dto.VerificationCodeInput)">
            <summary>
            发送手机激活验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.Actives.Dto.ConfirmEmailInput">
            <summary>
            邮箱地址验证
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Actives.Dto.ConfirmEmailInput.SecretKey">
            <summary>
            密钥
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Actives.IActiveAppService">
            <summary>
            账号服务接口
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.Actives.IActiveAppService.SendConfirmEmailCode(QC.MF.Authorization.Dto.SendConfirmEmailByCaptchaInput)">
            <summary>
            发送邮箱验证码
            （sendemail）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Actives.IActiveAppService.SendConfirmPhoneNumberByCode(QC.MF.Users.Dto.VerificationCodeInput)">
            <summary>
            发送手机激活验证码
            （sendemail）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Actives.IActiveAppService.ConfirmEmailByCode(QC.MF.Authorization.Dto.ConfirmEmailCodeInput)">
            <summary>
            验证邮箱验
            （sendemail）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Actives.IActiveAppService.ConfirmPhoneNumberByCode(QC.MF.Users.Dto.VerificationCodeInput)">
            <summary>
            验证手机号
            （sendemail）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.Registers.Dto.RegisterOnlyPhoneNumberInput">
            <summary>
            手机号注册(只有手机号)
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterOnlyPhoneNumberInput.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterOnlyPhoneNumberInput.Captcha">
            <summary>
             短信验证码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterOnlyPhoneNumberInput.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Registers.Dto.RegisterByEmailInput">
            <summary>
            邮箱注册
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByEmailInput.UserName">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByEmailInput.EmailAddress">
            <summary>
            邮箱地址
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByEmailInput.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByEmailInput.Token">
            <summary>
            第三方登录令牌
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByEmailInput.Captcha">
            <summary>
             邮件验证码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Registers.Dto.RegisterByPhoneNumberInput">
            <summary>
            手机号注册
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByPhoneNumberInput.UserName">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByPhoneNumberInput.PhoneNumber">
            <summary>
            邮箱地址
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByPhoneNumberInput.Captcha">
            <summary>
             短信验证码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByPhoneNumberInput.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterByPhoneNumberInput.Token">
            <summary>
            第三方登录令牌
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.RegisterInput.Token">
            <summary>
            第三方登录令牌
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Registers.Dto.ResetPasswordByEmailInput">
            <summary>
            通过邮箱找回
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.ResetPasswordByEmailInput.Password">
            <summary>
            新密码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Registers.Dto.VerificationResetPasswordByEmailInput">
            <summary>
            验证邮箱验证码是否正确
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.VerificationResetPasswordByEmailInput.Email">
            <summary>
            邮箱号
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.VerificationResetPasswordByEmailInput.VerificationCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Registers.Dto.ResetPasswordByPhoneNumberInput">
            <summary>
            通过手机号找回密码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.ResetPasswordByPhoneNumberInput.Password">
            <summary>
            新密码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.ResetPasswordByPhoneNumberInput.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Registers.Dto.ResetPasswordByPhoneNumberInput.Code">
            <summary>
            短信验证码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Registers.RegisterAppService">
            <summary>
            账号服务
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.Registers.RegisterAppService.#ctor(QC.MF.Authorization.Users.UserRegistrationManager,QC.MF.SMSs.ISMSManager,QC.MF.Authorization.LogInManager,QC.MF.Security.PasswordComplexityChecker,Abp.Runtime.Caching.ICacheManager,QC.MF.Authorization.Users.UserManager,QC.MF.Captcha.ICaptchaManager)">
            <summary>
            构造函数
            </summary>
            <param name="userRegistrationManager"></param>
            <param name="smsManager"></param>
            <param name="loginManager"></param>
            <param name="passwordComplexityChecker"></param>
            <param name="captchaManager"></param>
        </member>
        <member name="M:QC.MF.Authorization.Registers.RegisterAppService.Register(QC.MF.Authorization.Registers.Dto.RegisterInput)">
            <summary>
            注册
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.RegisterAppService.SendEmailCode(QC.MF.Authorization.Dto.SendConfirmEmailByCaptchaInput)">
            <summary>
            发送邮箱验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.RegisterAppService.RegisterByEmail(QC.MF.Authorization.Registers.Dto.RegisterByEmailInput)">
            <summary>
            通过邮箱注册
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.RegisterAppService.SendPhoneNumberCode(QC.MF.Users.Dto.PhoneWithCaptchaInput)">
            <summary>
            注册时发送手机证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.RegisterAppService.RegisterByPhoneNumber(QC.MF.Authorization.Registers.Dto.RegisterByPhoneNumberInput)">
            <summary>
            通过手机号注册
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.RegisterAppService.RegisterOnlyPhoneNumber(QC.MF.Authorization.Registers.Dto.RegisterOnlyPhoneNumberInput)">
            <summary>
            通过手机号注册（只有手机号）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.Registers.IRegisterAppService">
            <summary>
            账号服务接口
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.Registers.IRegisterAppService.Register(QC.MF.Authorization.Registers.Dto.RegisterInput)">
            <summary>
            注册
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.IRegisterAppService.RegisterByEmail(QC.MF.Authorization.Registers.Dto.RegisterByEmailInput)">
            <summary>
            通过邮箱注册
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.IRegisterAppService.RegisterByPhoneNumber(QC.MF.Authorization.Registers.Dto.RegisterByPhoneNumberInput)">
            <summary>
            通过手机号注册
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.IRegisterAppService.RegisterOnlyPhoneNumber(QC.MF.Authorization.Registers.Dto.RegisterOnlyPhoneNumberInput)">
            <summary>
            通过手机号注册（只有手机号）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.IRegisterAppService.SendEmailCode(QC.MF.Authorization.Dto.SendConfirmEmailByCaptchaInput)">
            <summary>
            发送邮箱验证码   
            (使用者：registerByEmail)
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Registers.IRegisterAppService.SendPhoneNumberCode(QC.MF.Users.Dto.PhoneWithCaptchaInput)">
            <summary>
            注册时发送手机证码  
            （register）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.RestPasswords.RestPasswordAppService">
            <summary>
            账号服务
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.RestPasswordAppService.#ctor(QC.MF.Authorization.Users.UserRegistrationManager,QC.MF.SMSs.ISMSManager,QC.MF.Authorization.LogInManager,QC.MF.Security.PasswordComplexityChecker,Abp.Runtime.Caching.ICacheManager,QC.MF.Authorization.Users.UserManager,QC.MF.Captcha.ICaptchaManager)">
            <summary>
            构造函数
            </summary>
            <param name="userRegistrationManager"></param>
            <param name="smsManager"></param>
            <param name="loginManager"></param>
            <param name="passwordComplexityChecker"></param>
            <param name="captchaManager"></param>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.RestPasswordAppService.SendEmailCode(QC.MF.Authorization.Dto.SendConfirmEmailByCaptchaInput)">
            <summary>
            发送邮箱验证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.RestPasswordAppService.SendPhoneNumberCode(QC.MF.Users.Dto.PhoneWithCaptchaInput)">
            <summary>
            注册时发送手机证码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.RestPasswordAppService.ResetPasswordByPhoneNumber(QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByPhoneNumberInput)">
            <summary>
            通过手机重置密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.RestPasswordAppService.ResetPasswordByEmail(QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByEmailInput)">
            <summary>
            通过邮箱重置密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByEmailInput">
            <summary>
            通过邮箱找回
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByEmailInput.Password">
            <summary>
            新密码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.RestPasswords.Dto.VerificationResetPasswordByEmailInput">
            <summary>
            验证邮箱验证码是否正确
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.RestPasswords.Dto.VerificationResetPasswordByEmailInput.Email">
            <summary>
            邮箱号
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.RestPasswords.Dto.VerificationResetPasswordByEmailInput.VerificationCode">
            <summary>
            验证码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByPhoneNumberInput">
            <summary>
            通过手机号找回密码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByPhoneNumberInput.Password">
            <summary>
            新密码
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByPhoneNumberInput.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByPhoneNumberInput.Code">
            <summary>
            短信验证码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.RestPasswords.IRestPasswordAppService">
            <summary>
            重置 密码（找回密码）
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.IRestPasswordAppService.SendEmailCode(QC.MF.Authorization.Dto.SendConfirmEmailByCaptchaInput)">
            <summary>
            发送邮箱验证码   
            (使用者：backknow)  
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.IRestPasswordAppService.SendPhoneNumberCode(QC.MF.Users.Dto.PhoneWithCaptchaInput)">
            <summary>
            注册时发送手机证码  
            （callback）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.IRestPasswordAppService.ResetPasswordByPhoneNumber(QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByPhoneNumberInput)">
            <summary>
            通过手机号找回密码
            （callback）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.RestPasswords.IRestPasswordAppService.ResetPasswordByEmail(QC.MF.Authorization.RestPasswords.Dto.ResetPasswordByEmailInput)">
            <summary>
            通过邮箱找回密码
            （backknow）
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.Dto.ConfirmEmailCodeInput">
            <summary>
            邮箱地址验证
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Dto.ConfirmEmailCodeInput.Code">
            <summary>
            密钥
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Dto.SendConfirmEmailByCaptchaInput">
            <summary>
            发送激活账号邮件
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Dto.SendConfirmEmailByCaptchaInput.Captcha">
            <summary>
            验证码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Dto.SendConfirmEmailInput">
            <summary>
            发送激活账号邮件
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Dto.SendConfirmEmailInput.Email">
            <summary>
            邮箱地址
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Permissions.Dto.FlatPermissionDto">
            <summary>
            权限
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.FlatPermissionDto.ParentName">
            <summary>
            上级名称
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.FlatPermissionDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.FlatPermissionDto.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.FlatPermissionDto.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.FlatPermissionDto.IsGrantedByDefault">
            <summary>
            
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Permissions.Dto.PermissionDto">
            <summary>
            权值
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.PermissionDto.ParentName">
            <summary>
            上级名称
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.PermissionDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.PermissionDto.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.PermissionDto.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.PermissionDto.IsGrantedByDefault">
            <summary>
            默认授予权限
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.Permissions.Dto.PermissionDto.Children">
            <summary>
            子权限
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.Permissions.Dto.PermissionDto.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.Permissions.IPermissionAppService">
            <summary>
            权限服务端接口
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.Permissions.IPermissionAppService.GetAllPermissions">
            <summary>
            获取所有权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Permissions.IPermissionAppService.GetAllPermissionTree">
            <summary>
            获取权限树
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Permissions.IPermissionAppService.GetUserPermissions">
            <summary>
            获取登录用户所有权值
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Permissions.PermissionAppService.GetAllPermissions">
            <summary>
            获取所有权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Permissions.PermissionAppService.GetAllPermissionTree">
            <summary>
            获取权限树
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.Permissions.PermissionAppService.GetUserPermissions">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.Permissions.PermissionManagerExtensions.GetPermissionsFromNamesByValidating(Abp.Authorization.IPermissionManager,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets all permissions by names.
            Throws <see cref="T:Abp.Runtime.Validation.AbpValidationException"/> if can not find any of the permission names.
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.ThirdParty.AlipayAuthService">
            <summary>
            支付宝第三方认证服务
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.AlipayAuthService.#ctor(Abp.Domain.Repositories.IRepository{QC.MF.Authorization.ThirdParty.ThirdPartyUser,System.Int64})">
            <summary>
            构造函数
            </summary>
            <param name="thirdPartyUserRepository"></param>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.AlipayAuthService.GetAuthRedirectUrl">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.AlipayAuthService.Authorize(QC.MF.Authorization.ThirdParty.Dto.AuthorizationInput)">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.AlipayAuthService.GetBindingRedirectUrl">
            <inheritdoc />
        </member>
        <member name="T:QC.MF.Authorization.ThirdParty.Dto.AuthorizationInput">
            <summary>
            第三方认证请求参数
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.ThirdParty.Dto.AuthorizationInput.Code">
            <summary>
            认证码
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyAuthorizeResult">
            <summary>
            第三方用户认证信息
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyAuthorizeResult.Success">
            <summary>
            是否登录成功
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyAuthorizeResult.RequireCreateNewUser">
            <summary>
            是否需要创建新用户
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyAuthorizeResult.Token">
            <summary>
            令牌
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyAuthorizeResult.ThirdPartyUser">
            <summary>
            第三方用户信息
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyUserOutput">
            <summary>
            第三方用户信息
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyUserOutput.UserId">
            <summary>
            关联用户ID
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyUserOutput.Name">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:QC.MF.Authorization.ThirdParty.Dto.ThirdPartyUserOutput.NickName">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="T:QC.MF.Authorization.ThirdParty.IThirdPartyAuthService">
            <summary>
            第三方服务
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.IThirdPartyAuthService.GetAuthRedirectUrl">
            <summary>
            获取跳转第三方登录链接地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.IThirdPartyAuthService.Authorize(QC.MF.Authorization.ThirdParty.Dto.AuthorizationInput)">
            <summary>
            调用第三方认证
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.IThirdPartyAuthService.GetBindingRedirectUrl">
            <summary>
            获取跳转第三方绑定链接地址
            </summary>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Authorization.ThirdParty.QQAuthService">
            <summary>
            
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.QQAuthService.#ctor(QC.MF.Authorization.Users.UserManager,Abp.Domain.Repositories.IRepository{QC.MF.Authorization.ThirdParty.ThirdPartyUser,System.Int64})">
            <summary>
            构造函数
            </summary>
            <param name="userManager"></param>
            <param name="thirdPartyUserRepository"></param>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.QQAuthService.GetAuthRedirectUrl">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.QQAuthService.Authorize(QC.MF.Authorization.ThirdParty.Dto.AuthorizationInput)">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.QQAuthService.GetBindingRedirectUrl">
            <inheritdoc />
        </member>
        <member name="T:QC.MF.Authorization.ThirdParty.WeiboAuthService">
            <summary>
            微博登录服务
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.WeiboAuthService.#ctor(Abp.Domain.Repositories.IRepository{QC.MF.Authorization.ThirdParty.ThirdPartyUser,System.Int64})">
            <summary>
            构造函数
            </summary>
            <param name="thirdPartyUserRepository"></param>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.WeiboAuthService.GetAuthRedirectUrl">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.WeiboAuthService.Authorize(QC.MF.Authorization.ThirdParty.Dto.AuthorizationInput)">
            <inheritdoc />
        </member>
        <member name="T:QC.MF.Authorization.ThirdParty.WeixinAuthService">
            <summary>
            微信授权服务
            </summary>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.WeixinAuthService.#ctor(QC.MF.Authorization.Users.UserManager,Abp.Domain.Repositories.IRepository{QC.MF.Authorization.ThirdParty.ThirdPartyUser,System.Int64})">
            <summary>
            构造函数
            </summary>
            <param name="userManager"></param>
            <param name="thirdPartyUserRepository"></param>
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.WeixinAuthService.GetAuthRedirectUrl">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.WeixinAuthService.Authorize(QC.MF.Authorization.ThirdParty.Dto.AuthorizationInput)">
            <inheritdoc />
        </member>
        <member name="M:QC.MF.Authorization.ThirdParty.WeixinAuthService.GetBindingRedirectUrl">
            <inheritdoc />
        </member>
        <member name="T:QC.MF.CommonDto.CascaderDto`1">
            <summary>
            级联选择 antd组件
            </summary>
        </member>
        <member name="T:QC.MF.CommonDto.FilteredInputDto">
            <summary>
            分页 排序 过滤 条件
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.FilteredInputDto.Filter">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.IFilteredResultRequest.Filter">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="T:QC.MF.CommonDto.ImportOutput">
            <summary>
            
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.ImportOutput.TotalCount">
            <summary>
            数据总数
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.ImportOutput.SuccessCount">
            <summary>
            成功数量
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.ImportOutput.RepeatCount">
            <summary>
            成功数量
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.ImportOutput.FailureCount">
            <summary>
            失败数量
            </summary>
        </member>
        <member name="T:QC.MF.CommonDto.ArrayDto`1">
            <summary>
            数组信息
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.ArrayDto`1.Value">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:QC.MF.CommonDto.PagedAndFilteredInputDto">
            <summary>
            分页过滤条件
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.PagedAndFilteredInputDto.MaxResultCount">
            <summary>
            每页数量
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.PagedAndFilteredInputDto.SkipCount">
            <summary>
            跳过数量
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.PagedAndFilteredInputDto.Filter">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="M:QC.MF.CommonDto.PagedAndFilteredInputDto.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:QC.MF.CommonDto.PagedAndSortedInputDto">
            <summary>
            分页 排序 条件
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.PagedAndSortedInputDto.Sorting">
            <summary>
            排序字段
            </summary>
        </member>
        <member name="M:QC.MF.CommonDto.PagedAndSortedInputDto.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:QC.MF.CommonDto.PagedInputDto">
            <summary>
            分页 条件
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.PagedInputDto.MaxResultCount">
            <summary>
            每页数据条数
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.PagedInputDto.SkipCount">
            <summary>
            跳过数据条数
            </summary>
        </member>
        <member name="M:QC.MF.CommonDto.PagedInputDto.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:QC.MF.CommonDto.PagedSortedAndFilteredInputDto">
            <summary>
            分页 排序 过滤 条件
            </summary>
        </member>
        <member name="P:QC.MF.CommonDto.PagedSortedAndFilteredInputDto.Filter">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="P:QC.MF.Configuration.Dto.ClientSettingDto.AllowSelfRegistration">
            <summary>
            允许用户注册
            </summary>
        </member>
        <member name="P:QC.MF.Configuration.Dto.ClientSettingDto.WeixinOpenIsEnabled">
            <summary>
            启用微信登录
            </summary>
        </member>
        <member name="P:QC.MF.Configuration.Dto.ClientSettingDto.AlipayIsEnabled">
            <summary>
            启用支付宝登录
            </summary>
        </member>
        <member name="P:QC.MF.Configuration.Dto.ClientSettingDto.QQIsEnabled">
            <summary>
            启用QQ登录
            </summary>
        </member>
        <member name="P:QC.MF.Configuration.Dto.ClientSettingDto.WeiboIsEnabled">
            <summary>
            启用微博登录
            </summary>
        </member>
        <member name="P:QC.MF.Configuration.Dto.ClientSettingDto.SystemName">
            <summary>
            系统名称
            </summary>
        </member>
        <member name="P:QC.MF.Configuration.Dto.SettingsEditOutput.Name">
            <summary>
            用于反射获取dto
            </summary>
        </member>
        <member name="T:QC.MF.Configuration.Dto.SiteUrlInput">
            <summary>
            站点地址
            </summary>
        </member>
        <member name="P:QC.MF.Configuration.Dto.SiteUrlInput.SiteUrl">
            <summary>
            站点地址
            </summary>
        </member>
        <member name="M:QC.MF.Configuration.IConfigurationService`1.GetSetting">
            <summary>
            获取设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Configuration.IConfigurationService`1.SetSetting(`0)">
            <summary>
            应用设置
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:QC.MF.Configuration.IConfigurationAppService.ChangeUiTheme(QC.MF.Configuration.Dto.ChangeUiThemeInput)">
            <summary>
            设置皮肤
            </summary>
        </member>
        <member name="M:QC.MF.Configuration.IConfigurationAppService.GetUiTheme">
            <summary>
            获取用户设置的皮肤
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Configuration.IConfigurationAppService.GetAllSettings">
            <summary>
            获取所有配置
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Configuration.IConfigurationAppService.UpdateAllSettings(Newtonsoft.Json.Linq.JObject)">
            <summary>
            更新所有配置
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:QC.MF.Configuration.IConfigurationAppService.GetClientSetting">
            <summary>
            获取客户端设置
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.DragVerifications.DragVerificationAppService.cutImage(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取裁剪的小图
            </summary>
            <param name="sFromBmp">原图</param>
            <param name="cutWidth">剪切宽度</param>
            <param name="cutHeight">剪切高度</param>
            <param name="x">X轴剪切位置</param>
            <param name="y">Y轴剪切位置</param>
        </member>
        <member name="M:QC.MF.DragVerifications.DragVerificationAppService.GetNewBitMap(System.Drawing.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取裁剪小图后的原图
            </summary>
            <param name="sFromBmp">原图</param>
            <param name="cutWidth">剪切宽度</param>
            <param name="cutHeight">剪切高度</param>
            <param name="spaceX">X轴剪切位置</param>
            <param name="spaceY">Y轴剪切位置</param>
        </member>
        <member name="M:QC.MF.DragVerifications.DragVerificationAppService.PTransparentAdjust(System.Drawing.Bitmap,System.Int32)">
            <summary>
            获取半透明图像
            </summary>
            <param name="bmp">Bitmap对象</param>
            <param name="alpha">alpha分量。有效值为从 0 到 255。</param>
        </member>
        <member name="M:QC.MF.DragVerifications.DragVerificationAppService.ConfusionImage(System.Int32[],System.Drawing.Bitmap)">
            <summary>
            获取混淆拼接的图片
            </summary>
            <param name="a">无序数组</param>
            <param name="bmp">剪切小图后的原图</param>
        </member>
        <member name="M:QC.MF.DragVerifications.DragVerificationAppService.SlideFeature(System.String)">
            <summary>
            滑动特性
            </summary>
        </member>
        <member name="M:QC.MF.DragVerifications.DragVerificationAppService.GetTime(System.String)">
            <summary>
            时间戳转为C#格式时间
            </summary>
            <param name="timeStamp">Unix时间戳格式</param>
            <returns>C#格式时间</returns>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.CheckCodeInput.Point">
            <summary>
            完成时x轴对于左上角位置位置
            </summary>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.CheckCodeInput.DateList">
            <summary>
            滑动过程特征
            </summary>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.CheckCodeInput.Timespan">
            <summary>
            耗时
            </summary>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.DragVerificationDto.Y">
            <summary>
            裁剪图片y轴位置
            </summary>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.DragVerificationDto.Array">
            <summary>
            无序数组
            </summary>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.DragVerificationDto.ImgX">
            <summary>
            原图宽
            </summary>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.DragVerificationDto.ImgY">
            <summary>
            原图高
            </summary>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.DragVerificationDto.Small">
            <summary>
            小图字符串
            </summary>
        </member>
        <member name="P:QC.MF.DragVerifications.Dto.DragVerificationDto.Normal">
            <summary>
            原图高
            </summary>
        </member>
        <member name="M:QC.MF.DynamicQueryableExtensions.HasRecognizable(System.String)">
            <summary>
            是否是比较过滤
            </summary>
            <param name="filter"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.DynamicQueryableExtensions.Filter``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            动态过滤
            </summary>
        </member>
        <member name="F:QC.MF.DynamicQueryableExtensions.CompareSymbolFunction">
            <summary>
            比较符号
            </summary>
        </member>
        <member name="F:QC.MF.DynamicQueryableExtensions.CompareSymbol">
            <summary>
            比较符号
            </summary>
        </member>
        <member name="F:QC.MF.DynamicQueryableExtensions.ConnectionSymbol">
            <summary>
            连接符号
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.SetFileSettingDemoDto.FileSize">
            <summary>
            文件大小限制
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.SetFileSettingDemoDto.FileExtension">
            <summary>
            文件格式限制
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.LongText">
            <summary>
            介绍
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.Group">
            <summary>
            组
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.IsActivate">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.Sort">
            <summary>
            顺序
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.Weight">
            <summary>
            权
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.PublishTime">
            <summary>
            发布时间
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.Avatar">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.CreateDemoDto.Location">
            <summary>
            位置
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.GetListDemoDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.GetListDemoDto._CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.GetListDemoDto.LastModificationTime">
            <summary>
            最后一次修改时间
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.GetListDemoDto._LastModificationTime">
            <summary>
            最后一次修改时间
            </summary>
        </member>
        <member name="P:QC.MF.Demos.Dto.GetDemoDto.PreviousAndNext">
            <summary>
            上一个 下一个
            </summary>
        </member>
        <member name="T:QC.MF.Demos.IFileSettingDemoAppService">
            <summary>
            FileSetting内容管理
            </summary>
        </member>
        <member name="M:QC.MF.Demos.IFileSettingDemoAppService.Get">
            <summary>
            获取内容
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Demos.IFileSettingDemoAppService.Set(QC.MF.Demos.Dto.SetFileSettingDemoDto)">
            <summary>
            修改内容
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Demos.IDemoAppService">
            <summary>
            Demo
            </summary>
        </member>
        <member name="T:QC.MF.InterfaceExport.IInterfaceExportAppService">
            <summary>
            接口导出
            </summary>
        </member>
        <member name="M:QC.MF.InterfaceExport.IInterfaceExportAppService.GetReactDownloadUrl">
            <summary>
            导出React使用的TypeScript文件
            </summary>
        </member>
        <member name="T:QC.MF.InterfaceExport.InterfaceExportAppService">
            <summary>
            接口导出实现
            </summary>
        </member>
        <member name="M:QC.MF.InterfaceExport.InterfaceExportAppService.GetReactDownloadUrl">
            <inheritdoc />
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Sname">
            <summary>
            存款人名称
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.PhoneNumber">
            <summary>
            电话
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.PostCode">
            <summary>
            邮编
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.DepositorsType">
            <summary>
            存款人类别
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Organization">
            <summary>
            组织机构代码
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.FadingAndDanwei">
            <summary>
            法定代表人和单位负责人
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.PaperType">
            <summary>
            证件类型
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.PaperNumber">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Industry">
            <summary>
            行业分类
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Zijin">
            <summary>
            注册资金
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.AddressDaima">
            <summary>
            地区代码
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Business">
            <summary>
            经营范围
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.PaperWenjian">
            <summary>
            证明文件种类
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.PaperBianhao">
            <summary>
            证明文件编号
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Tax">
            <summary>
            税务登记证
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.ZhangHuNature">
            <summary>
            账户性质
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.ZiJiNature">
            <summary>
            资金性质
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.Year">
            <summary>
            有效日期
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.DirectorName">
            <summary>
            主管名称
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.CunkuanZhangHu">
            <summary>
            基本存款账户开户
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.ZuZhiJiGou">
            <summary>
            组织机构代码
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.FadingDaiBiao">
            <summary>
            法定代表人和单位负责人
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.FadingDaiBiaoName">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.FadingDaiBiaoType">
            <summary>
            证件种类
            </summary>
        </member>
        <member name="P:QC.MF.KailiApplyBooks.Dto.CreateKailiApplyBookDto.FadingDaiBiaoNumber">
            <summary>
            证件号码
            </summary>
        </member>
        <member name="T:QC.MF.Menus.Dto.CreateMenuInput">
            <summary>
            创建菜单参数
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.CreateMenuInput.ParentId">
            <summary>
            上级菜单ID
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.CreateMenuInput.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.CreateMenuInput.Icon">
            <summary>
            图标名称
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.CreateMenuInput.Order">
            <summary>
            菜单顺序
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.CreateMenuInput.IsVisible">
            <summary>
            菜单是否可见
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.CreateMenuInput.RequiredPermissionName">
            <summary>
            权限限制
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.CreateMenuInput.Url">
            <summary>
            目标链接
            </summary>
        </member>
        <member name="T:QC.MF.Menus.Dto.DeleteMenuInput">
            <summary>
            删除菜单参数
            </summary>
        </member>
        <member name="T:QC.MF.Menus.Dto.MenuDto">
            <summary>
            菜单
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.ParentId">
            <summary>
            上级菜单
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.Icon">
            <summary>
            图标名称
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.IsLeaf">
            <summary>
            是否叶子节点
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.Order">
            <summary>
            菜单顺序
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.IsEnabled">
            <summary>
            菜单是否可用
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.IsVisible">
            <summary>
            菜单是否可见
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.RequiredPermissionName">
            <summary>
            权限限制
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.RequiresAuthentication">
            <summary>
            是否需要登录才可查看菜单
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.Target">
            <summary>
            打开方式 "_blank", "_self", "_parent", "_top"或者iframe名字
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.Url">
            <summary>
            目标链接
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.IsSystem">
            <summary>
            是否系统菜单
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MenuDto.Items">
            <summary>
            子菜单
            </summary>
        </member>
        <member name="M:QC.MF.Menus.Dto.MenuDto.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:QC.MF.Menus.Dto.MoveMenuInput">
            <summary>
            移动菜单项
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MoveMenuInput.Id">
            <summary>
            菜单ID
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MoveMenuInput.NewParentId">
            <summary>
            新的上级菜单
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.MoveMenuInput.NewOrder">
            <summary>
            菜单新顺序
            </summary>
        </member>
        <member name="T:QC.MF.Menus.Dto.UpdateMenuInput">
            <summary>
            更新菜单信息
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.UpdateMenuInput.Id">
            <summary>
            菜单Id
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.UpdateMenuInput.DisplayName">
            <summary>
            显示名称
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.UpdateMenuInput.Icon">
            <summary>
            图标class 
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.UpdateMenuInput.IsVisible">
            <summary>
            菜单是否可见
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.UpdateMenuInput.RequiredPermissionName">
            <summary>
            权限限制
            </summary>
        </member>
        <member name="P:QC.MF.Menus.Dto.UpdateMenuInput.Url">
            <summary>
            目标链接
            </summary>
        </member>
        <member name="T:QC.MF.Menus.IMenuAppService">
            <summary>
            
            </summary>
        </member>
        <member name="M:QC.MF.Menus.IMenuAppService.CreateCustomMenu(QC.MF.Menus.Dto.CreateMenuInput)">
            <summary>
            创建用户自定义菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.IMenuAppService.CreateSystemMenu(QC.MF.Menus.Dto.CreateMenuInput)">
            <summary>
            创建系统菜单，开发人员使用
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.IMenuAppService.UpdateMenu(QC.MF.Menus.Dto.UpdateMenuInput)">
            <summary>
            更新菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.IMenuAppService.MoveMenu(QC.MF.Menus.Dto.MoveMenuInput)">
            <summary>
            移动菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.IMenuAppService.DeleteMenu(QC.MF.Menus.Dto.DeleteMenuInput)">
            <summary>
            删除菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.IMenuAppService.GetUserMenus">
            <summary>
            获取菜单及权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.IMenuAppService.GetAllMenus">
            <summary>
            获取菜单及权限
            </summary>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Menus.MenuAppService">
            <summary>
            菜单接口服务
            </summary>
        </member>
        <member name="M:QC.MF.Menus.MenuAppService.#ctor(Abp.Domain.Repositories.IRepository{QC.MF.Menus.Menu},Abp.Application.Navigation.IUserNavigationManager)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:QC.MF.Menus.MenuAppService.CreateCustomMenu(QC.MF.Menus.Dto.CreateMenuInput)">
            <summary>
            创建用户自定义菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.MenuAppService.CreateSystemMenu(QC.MF.Menus.Dto.CreateMenuInput)">
            <summary>
            创建系统菜单，开发人员使用
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.MenuAppService.UpdateMenu(QC.MF.Menus.Dto.UpdateMenuInput)">
            <summary>
            更新菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.MenuAppService.MoveMenu(QC.MF.Menus.Dto.MoveMenuInput)">
            <summary>
            移动菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.MenuAppService.DeleteMenu(QC.MF.Menus.Dto.DeleteMenuInput)">
            <summary>
            删除菜单
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.MenuAppService.GetUserMenus">
            <summary>
            获取菜单及权限
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Menus.MenuAppService.GetAllMenus">
            <summary>
            获取菜单及权限
            </summary>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Menus.DBNavigationProvider">
            <summary>
            菜单导航管理
            </summary>
        </member>
        <member name="F:QC.MF.Menus.DBNavigationProvider.MenuGroupName">
            <summary>
            菜单组名称
            </summary>
        </member>
        <member name="M:QC.MF.Menus.DBNavigationProvider.SetNavigation(Abp.Application.Navigation.INavigationProviderContext)">
            <summary>
            构建导航菜单
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:QC.MF.MFAppServiceBase">
            <summary>
            Derive your application services from this class.
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.GetOrganizationUnitJoinableUserListInput">
            <summary>
            获取可加入某组织机构的人员请求
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.GetOrganizationUnitJoinableUserListInput.Id">
            <summary>
            组织机构Id
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.GetOrganizationUnitJoinableUserListInput.Filter">
            <summary>
            按名称过滤
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.GetOrganizationUnitUsersInput">
            <summary>
            获取组织下人员信息请求
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.GetOrganizationUnitUsersInput.Id">
            <summary>
            机构ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.GetOrganizationUnitUsersInput.IsRecursiveSearch">
            <summary>
            是否递归查找下级机构数据
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.GetOrganizationUnitUsersInput.NameFilter">
            <summary>
            用户名称过滤条件
            </summary>
        </member>
        <member name="M:QC.MF.OrganizationUnits.Dto.GetOrganizationUnitUsersInput.Normalize">
            <summary>
            排序条件
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserListDto">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserListDto.Name">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserListDto.Surname">
            <summary>
             显示名称
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserListDto.UserName">
            <summary>
            用户账号
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserListDto.EmailAddress">
            <summary>
            邮件地址
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserListDto.ProfilePictureId">
            <summary>
            头像ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserListDto.AddedTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserListDto.PhoneNumber">
            <summary>
            用户手机号
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.UpdateOrganizationUnitInput">
            <summary>
            更新组织机构信息请求
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.UpdateOrganizationUnitInput.Id">
            <summary>
            组织机构ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.UpdateOrganizationUnitInput.DisplayName">
            <summary>
            组织机构名称
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.CreateOrganizationUnitInput">
            <summary>
            创建组织机构参数
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.CreateOrganizationUnitInput.ParentId">
            <summary>
            上级机构ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.CreateOrganizationUnitInput.DisplayName">
            <summary>
            机构名称
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.MoveOrganizationUnitInput">
            <summary>
            移动组织机构请求
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.MoveOrganizationUnitInput.Id">
            <summary>
            组织机构ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.MoveOrganizationUnitInput.NewParentId">
            <summary>
            新的上级组织机构ID
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.OrganizationUnitDto">
            <summary>
            组织机构信息
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitDto.ParentId">
            <summary>
            上级机构ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitDto.Code">
            <summary>
            机构Code
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitDto.DisplayName">
            <summary>
            机构名称
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitDto.MemberCount">
            <summary>
            组织机构人员数量
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitDto.Children">
            <summary>
            下级组织机构
            </summary>
        </member>
        <member name="M:QC.MF.OrganizationUnits.Dto.OrganizationUnitDto.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserDto">
            <summary>
            归属于组织单元的人员信息
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserDto.Id">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserDto.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserDto.Name">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserDto.PhoneNumber">
            <summary>
            用户手机号
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserDto.CreationTime">
            <summary>
            用户创建时间
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.OrganizationUnitUserDto.EmailAddress">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.UserIdInput">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.UserIdInput.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.UsersToOrganizationUnitInput">
            <summary>
            用户加入组织请求
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.UsersToOrganizationUnitInput.UserIdListStr">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.UsersToOrganizationUnitInput.OrganizationUnitId">
            <summary>
            组织机构ID
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.Dto.UserToOrganizationUnitInput">
            <summary>
            用户加入组织请求
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.UserToOrganizationUnitInput.UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:QC.MF.OrganizationUnits.Dto.UserToOrganizationUnitInput.OrganizationUnitId">
            <summary>
            组织机构ID
            </summary>
        </member>
        <member name="T:QC.MF.OrganizationUnits.IOrganizationUnitAppService">
            <summary>
            组织单元管理
            </summary>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.GetOrganizationUnits">
            <summary>
            获取组织机构树
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.CreateOrganizationUnit(QC.MF.OrganizationUnits.Dto.CreateOrganizationUnitInput)">
            <summary>
            创建组织机构
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.UpdateOrganizationUnit(QC.MF.OrganizationUnits.Dto.UpdateOrganizationUnitInput)">
            <summary>
            修改组织机构信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.MoveOrganizationUnit(QC.MF.OrganizationUnits.Dto.MoveOrganizationUnitInput)">
            <summary>
            移动组织机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.DeleteOrganizationUnit(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            删除组织机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.GetOrganizationUnitUsers(QC.MF.OrganizationUnits.Dto.GetOrganizationUnitUsersInput)">
            <summary>
            获取组织机构下的所有人员
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.GetOrganizationUnitJoinableUserList(QC.MF.OrganizationUnits.Dto.GetOrganizationUnitJoinableUserListInput)">
            <summary>
            获取可加入某组织单元的所有人员
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.AddUserToOrganizationUnit(QC.MF.OrganizationUnits.Dto.UsersToOrganizationUnitInput)">
            <summary>
            将用户添加到组织机构中
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.RemoveUserFromOrganizationUnit(QC.MF.OrganizationUnits.Dto.UsersToOrganizationUnitInput)">
            <summary>
            从组织机构中移除用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.IsInOrganizationUnit(QC.MF.OrganizationUnits.Dto.UserToOrganizationUnitInput)">
            <summary>
            用户是否属于组织机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.GetUserOrganizationUnits(QC.MF.OrganizationUnits.Dto.UserIdInput)">
            <summary>
            获取用户所在组织机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.IOrganizationUnitAppService.RemoveAllOrganizationUnit(System.Int64)">
            <summary>
            移除用户的全部组织机构
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.OrganizationUnits.OrganizationUnitAppService">
            <summary>
            组织机构管理
            </summary>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.#ctor(Abp.Organizations.OrganizationUnitManager,Abp.Domain.Repositories.IRepository{Abp.Organizations.OrganizationUnit,System.Int64},Abp.Domain.Repositories.IRepository{Abp.Authorization.Users.UserOrganizationUnit,System.Int64},Abp.Domain.Repositories.IRepository{QC.MF.Authorization.Users.User,System.Int64})">
            <summary>
            构造函数
            </summary>
            <param name="organizationUnitManager"></param>
            <param name="organizationUnitRepository"></param>
            <param name="userOrganizationUnitRepository"></param>
            <param name="userRepository"></param>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.GetOrganizationUnits">
            <summary>
            获取组织机构树
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.CreateOrganizationUnit(QC.MF.OrganizationUnits.Dto.CreateOrganizationUnitInput)">
            <summary>
            创建组织机构
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.UpdateOrganizationUnit(QC.MF.OrganizationUnits.Dto.UpdateOrganizationUnitInput)">
            <summary>
            修改组织机构信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.MoveOrganizationUnit(QC.MF.OrganizationUnits.Dto.MoveOrganizationUnitInput)">
            <summary>
            移动组织机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.DeleteOrganizationUnit(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            删除组织机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.GetOrganizationUnitUsers(QC.MF.OrganizationUnits.Dto.GetOrganizationUnitUsersInput)">
            <summary>
            获取组织机构下的所有人员
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.GetOrganizationUnitJoinableUserList(QC.MF.OrganizationUnits.Dto.GetOrganizationUnitJoinableUserListInput)">
            <summary>
            获取可加入某组织单元的所有人员
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.AddUserToOrganizationUnit(QC.MF.OrganizationUnits.Dto.UsersToOrganizationUnitInput)">
            <summary>
            将用户添加到组织机构中
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.RemoveUserFromOrganizationUnit(QC.MF.OrganizationUnits.Dto.UsersToOrganizationUnitInput)">
            <summary>
            从组织机构中移除用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.IsInOrganizationUnit(QC.MF.OrganizationUnits.Dto.UserToOrganizationUnitInput)">
            <summary>
            用户是否属于组织机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.OrganizationUnits.OrganizationUnitAppService.GetUserOrganizationUnits(QC.MF.OrganizationUnits.Dto.UserIdInput)">
            <summary>
            获取用户所在组织机构
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="P:QC.MF.Powerbooks.Dto.CreatePowerbookDto.Sname">
            
        </member>
        <member name="P:QC.MF.Powerbooks.Dto.CreatePowerbookDto.Name_1">
            <summary>
            法定代表人信息
            </summary>
        </member>
        <member name="P:QC.MF.Powerbooks.Dto.CreatePowerbookDto.Name_2">
            办理人信息
            
        </member>
        <member name="M:QC.MF.AsyncMFCrudAppService`6.GetDropDownList``1(System.Linq.Expressions.Expression{System.Func{`0,Abp.Application.Services.Dto.NameValueDto{``0}}},System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String)">
            <summary>
            获取下拉列表
            </summary>
        </member>
        <member name="M:QC.MF.AsyncMFCrudAppService`6.GetDropDownList``1(System.Linq.Expressions.Expression{System.Func{`0,Abp.Application.Services.Dto.NameValueDto{``0}}},System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{`0}},System.String)">
            <summary>
            获取下拉列表
            </summary>
        </member>
        <member name="P:QC.MF.Registrations.Dto.CreateRegistrationDto.Name_1">
            客户信息
            
        </member>
        <member name="P:QC.MF.Registrations.Dto.CreateRegistrationDto.Number_2">
            美国纳税居民
            
        </member>
        <member name="P:QC.MF.Registrations.Dto.CreateRegistrationDto.Name_2">
            代理人监护人信息
            
        </member>
        <member name="P:QC.MF.Registrations.Dto.CreateRegistrationDto.Marriage">
            客户补充信息
            
        </member>
        <member name="P:QC.MF.Roles.Dto.CreateOrUpdateRoleInput.Role">
            <summary>
            角色信息
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.CreateOrUpdateRoleInput.GrantedPermissionNames">
            <summary>
            拥有的权限
            </summary>
        </member>
        <member name="T:QC.MF.Roles.Dto.GetRoleForEditOutput">
            <summary>
            编辑角色 需要的信息
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.GetRoleForEditOutput.Role">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.GetRoleForEditOutput.Permissions">
            <summary>
            权限列表
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.GetRoleForEditOutput.GrantedPermissionNames">
            <summary>
            该角色拥有的权限
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.GetRolesInput.Permission">
            <summary>
            权限过滤
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.GetRolesInput.Filter">
            <summary>
            过滤条件
            </summary>
        </member>
        <member name="T:QC.MF.Roles.Dto.RoleDto">
            <summary>
            角色实体
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleDto.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleDto.DisplayName">
            <summary>
            角色显示名称
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleDto.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleDto.IsStatic">
            <summary>
            是否系统角色
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleDto.IsDefault">
            <summary>
            是否默认角色
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleDto.Permissions">
            <summary>
            权值列表
            </summary>
        </member>
        <member name="T:QC.MF.Roles.Dto.RoleEditDto">
            <summary>
            角色信息
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleEditDto.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleEditDto.DisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleEditDto.IsDefault">
            <summary>
            是否是默认角色
            </summary>
        </member>
        <member name="T:QC.MF.Roles.Dto.RoleListDto">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleListDto.Name">
            <summary>
            角色名
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleListDto.DisplayName">
            <summary>
            显示名
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleListDto.IsStatic">
            <summary>
            是否是系统内置角色
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleListDto.IsDefault">
            <summary>
            是否是默认角色
            </summary>
        </member>
        <member name="P:QC.MF.Roles.Dto.RoleListDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:QC.MF.Roles.IRoleAppService">
            <summary>
            角色管理
            </summary>
        </member>
        <member name="M:QC.MF.Roles.IRoleAppService.GetRoles(QC.MF.Roles.Dto.GetRolesInput)">
            <summary>
            获取角色列表
            </summary>
        </member>
        <member name="M:QC.MF.Roles.IRoleAppService.GetRoleForEdit(Abp.Application.Services.Dto.NullableIdDto)">
            <summary>
            获取编辑时需要的角色信息
            </summary>
        </member>
        <member name="M:QC.MF.Roles.IRoleAppService.CreateOrUpdateRole(QC.MF.Roles.Dto.CreateOrUpdateRoleInput)">
            <summary>
            创建或修改角色
            </summary>
        </member>
        <member name="M:QC.MF.Roles.IRoleAppService.DeleteRole(Abp.Application.Services.Dto.EntityDto)">
            <summary>
            删除角色
            </summary>
        </member>
        <member name="P:QC.MF.Shenqingshu.Dto.CreateShenqingshuDto.Account">
            定期/通知存款业务
        </member>
        <member name="P:QC.MF.Shenqingshu.Dto.CreateShenqingshuDto.VoucherNumber">
            证实书/存单业务
        </member>
        <member name="P:QC.MF.Shenqingshu.Dto.CreateShenqingshuDto.Zhonglei">
            票据业务
        </member>
        <member name="P:QC.MF.Shenqingshu.Dto.CreateShenqingshuDto.Jiezhiriqi">
            资信业务
        </member>
        <member name="P:QC.MF.Shenqingshu.Dto.CreateShenqingshuDto.Biangengyuanyin">
            预留印鉴业务
        </member>
        <member name="P:QC.MF.Shouqunweituoshus1.Dto.CreateShouqunweituoshus1Dto.BankName">
            银行填写
        </member>
        <member name="P:QC.MF.Shouqunweituoshus2.Dto.CreateShouqunweituoshus2Dto.BankName">
            客户填写
        </member>
        <member name="P:QC.MF.Shouqunweituoshus2.Dto.CreateShouqunweituoshus2Dto.Add">
            电子对账
        </member>
        <member name="P:QC.MF.Shouqunweituoshus2.Dto.CreateShouqunweituoshus2Dto.QianYue">
            自助回单卡
        </member>
        <member name="P:QC.MF.Shouqunweituoshus2.Dto.CreateShouqunweituoshus2Dto.CheXiao">
            单位金融短信通
        </member>
        <member name="P:QC.MF.Shouqunweituoshus2.Dto.CreateShouqunweituoshus2Dto.GouMai">
            理财产品
        </member>
        <member name="P:QC.MF.Shouqunweituoshus2.Dto.CreateShouqunweituoshus2Dto.DaoDong">
            结构性存款
        </member>
        <member name="P:QC.MF.Shouqunweituoshus2.Dto.CreateShouqunweituoshus2Dto.ZhiHuan">
            单位存款证实书
        </member>
        <member name="T:QC.MF.Users.Dto.CreateOrUpdateUserInput">
            <summary>
            创建或编辑用户 参数
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.CreateOrUpdateUserInput.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.CreateOrUpdateUserInput.AssignedRoleNames">
            <summary>
            角色
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.CreateOrUpdateUserInput.SendActivationMessage">
            <summary>
            是否需要发送通知短信
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.CreateOrUpdateUserInput.SendActivationEmail">
            <summary>
            是否需要发送激活邮件
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.CreateOrUpdateUserInput.SetRandomPassword">
            <summary>
            是否使用随机密码
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.CreateOrUpdateUserInput.Organizations">
            <summary>
            组织机构信息
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.GetUserForEditOutput">
            <summary>
            获取编辑用户信息
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUserForEditOutput.ProfilePictureId">
            <summary>
            头像ID
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUserForEditOutput.User">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUserForEditOutput.Roles">
            <summary>
            角色信息
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUserForEditOutput.OrganizationIds">
            <summary>
            组织机构信息
            </summary>
        </member>
        <member name="M:QC.MF.Users.Dto.GetUserForEditOutput.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.GetUserPermissionsForEditOutput">
            <summary>
            用户权值
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUserPermissionsForEditOutput.Permissions">
            <summary>
            权值
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUserPermissionsForEditOutput.GrantedPermissionNames">
            <summary>
            已授予的权值
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.GetUsersInput">
            <summary>
            获取用户列表参数
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUsersInput.Filter">
            <summary>
            模糊匹配  Name、Surname、UserName、EmailAddress
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUsersInput.Permission">
            <summary>
            拥有此权限的用户
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUsersInput.Role">
            <summary>
            拥有此角色的用户
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUsersInput.Name">
            <summary>
            姓名      
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUsersInput.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.GetUsersInput.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.PhoneWithCaptchaInput">
            <summary>
            发送短信前需验证验证码
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.PhoneWithCaptchaInput.PhoneNumber">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.PhoneWithCaptchaInput.Captcha">
            <summary>
            验证码
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UpdateCurrentUserInput.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UpdateCurrentUserInput.Surname">
            <summary>
            姓氏    【可不使用】
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UpdateCurrentUserInput.EmailAddress">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UpdateCurrentUserInput.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.UpdateUserPermissionsInput">
            <summary>
            修改用户权限参数
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UpdateUserPermissionsInput.GrantedPermissionNames">
            <summary>
            权限集合
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.BatchActiveUserInput">
            <summary>
            
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.BatchActiveUserInput.Ids">
            <summary>
            用户Id
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.BatchActiveUserInput.IsActive">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.UserEditDto">
            <summary>
            编辑用户
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.Id">
            <summary>
            Set null to create a new user. Set user's Id to update a user
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.Name">
            <summary>
            姓名
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.Surname">
            <summary>
            姓氏    【可不使用】
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.UserName">
            <summary>
            登录名
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.EmailAddress">
            <summary>
            邮箱
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.PhoneNumber">
            <summary>
            手机号
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.IsActive">
            <summary>
            是否激活
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.ShouldChangePasswordOnNextLogin">
            <summary>
            下次登录需要修改密码
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserEditDto.IsLockoutEnabled">
            <summary>
            是否启用锁定
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.UserListDto">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.Name">
            <summary>
            用户姓名
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.Surname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.EmailAddress">
            <summary>
            邮件地址
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.PhoneNumber">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.ProfilePictureId">
            <summary>
            头像
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.IsEmailConfirmed">
            <summary>
            邮箱地址是否已验证
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto._IsEmailConfirmed">
            <summary>
            邮箱地址是否已验证
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.IsPhoneNumberConfirmed">
            <summary>
            手机号码是否已验证
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto._IsPhoneNumberConfirmed">
            <summary>
            手机号码是否已验证
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.Roles">
            <summary>
            角色列表
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto._Roles">
            <summary>
            角色列表
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.LastLoginTime">
            <summary>
            上次登录时间
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.IsActive">
            <inheritdoc />
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto._IsActive">
            <summary>
            是否启用
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.CreationTime">
            <summary>
            创建时间
            </summary>
        </member>
        <member name="T:QC.MF.Users.Dto.UserListDto.UserListRoleDto">
            <summary>
            角色信息
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.IsLocked">
            <summary>
            是否被锁定
            </summary>
        </member>
        <member name="P:QC.MF.Users.Dto.UserListDto.LockoutEndDateUtc">
            <summary>
            锁定超时时间
            </summary>
        </member>
        <member name="T:QC.MF.Users.IUserAppService">
            <summary>
            用户管理
            </summary>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.GetRoles">
            <summary>
            获取全部的角色
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.GetUsers(QC.MF.Users.Dto.GetUsersInput)">
            <summary>
            获取用户列表
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.GetUsersToExcel(QC.MF.Users.Dto.GetUsersInput)">
            <summary>
            导出用户信息到Excel文件
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.GetUserForEdit(Abp.Application.Services.Dto.NullableIdDto{System.Int64})">
            <summary>
            获取编辑时需要的单个用户信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.GetUserPermissionsForEdit(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            获取编辑时需要的用户权限
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.ResetUserSpecificPermissions(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            重置用户权限
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.UpdateUserPermissions(QC.MF.Users.Dto.UpdateUserPermissionsInput)">
            <summary>
            修改用户权限
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.CreateOrUpdateUser(QC.MF.Users.Dto.CreateOrUpdateUserInput)">
            <summary>
            创建或编辑用户，Id为空时创建，否则编辑
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.DeleteUser(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            删除用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.BatchDeleteUser(QC.MF.CommonDto.ArrayDto{System.Int64})">
            <summary>
            批量删除用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.UnlockUser(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            解锁用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.BatchUnlockUser(QC.MF.CommonDto.ArrayDto{System.Int64})">
            <summary>
            批量解锁用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.BatchActiveUser(QC.MF.Users.Dto.BatchActiveUserInput)">
            <summary>
            批量激活用户
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.UpdateCurrentUser(QC.MF.Users.Dto.UpdateCurrentUserInput)">
            <summary>
            用户修改自己的信息
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.IUserAppService.ToggleActiveStatus(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            切换用户启用禁用状态
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:QC.MF.Users.IUserLoginAppService">
            <summary>
            登录历史
            </summary>
        </member>
        <member name="M:QC.MF.Users.IUserLoginAppService.GetRecentUserLoginAttempts(QC.MF.Users.Dto.GetUserLoginsInput)">
            <summary>
            获取登录历史
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.Profile.IProfileAppService.GetCurrentUserProfileForEdit">
            <summary>
            编辑前，获取用户的基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.Profile.IProfileAppService.UpdateCurrentUserProfile(QC.MF.Users.Profile.Dto.CurrentUserProfileEditDto)">
            <summary>
            编辑用户的基本信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.Profile.IProfileAppService.ChangePassword(QC.MF.Users.Profile.Dto.ChangePasswordInput)">
            <summary>
            修改自己的密码 
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.Profile.IProfileAppService.ChangeUserPassword(QC.MF.Users.Profile.Dto.ChangeUserPasswordInput)">
            <summary>
            管理员修改别人的密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.Profile.IProfileAppService.ResetUserPassword(Abp.Application.Services.Dto.EntityDto{System.Int64})">
            <summary>
            管理员重置别人的密码
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.Profile.IProfileAppService.UpdateProfilePicture(QC.MF.Users.Profile.Dto.UpdateProfilePictureInput)">
            <summary>
            修改头像
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:QC.MF.Users.Profile.IProfileAppService.GetPasswordComplexitySetting">
            <summary>
            获取密码复杂性设置
            </summary>
            <returns></returns>
        </member>
        <member name="P:QC.MF.Xianjinjiaokuandan.Dto.CreateXinjinjiaokuandanDto.Nian">
            客户填写
        </member>
    </members>
</doc>
